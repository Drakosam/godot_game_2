[gd_scene load_steps=2 format=3 uid="uid://cws67kmxthwjj"]

[sub_resource type="GDScript" id="GDScript_ehikw"]
script/source = "extends Node2D

var mouse_over = false

var cursor_shodow = '#999999'
var normal_cursor = '#ffffff'
var odd_normal_corsor = '#dddddd'
var mark_color = '#000000'
var is_marked = false

var tile_top = null
var tile_top_r = null
var tile_top_l = null
var tile_botton = null
var tile_botton_r = null
var tile_botton_l = null

var world_posytion_x = 0
var world_posytion_y = 0

var is_odd = false
var my_ring_num = -1
var is_active = false

func _ready():
	$Polygon2D.visible= false
	$StaticBody2D.visible = false
	
func setup_posytion_in_world(wx, wy):
	world_posytion_y = wy
	world_posytion_x = wx

func setup_neighborhood(map):
	if world_posytion_y - 1 >= 0 :
		tile_top = map[world_posytion_y-1][world_posytion_x]
	
	if world_posytion_y+1 < len(map):
		tile_botton = map[world_posytion_y+1][world_posytion_x]
		
	
	if world_posytion_x % 2 == 1:
		pass	
		if world_posytion_x - 1 >= 0:
			tile_top_l = map[world_posytion_y][world_posytion_x - 1]
			
			if world_posytion_y + 1 < len(map):
				tile_botton_l = map[world_posytion_y+1][world_posytion_x - 1]
		
		if world_posytion_x + 1 < len(map):
			tile_top_r = map[world_posytion_y][world_posytion_x + 1]
			
			if world_posytion_y + 1 < len(map):
				tile_botton_r = map[world_posytion_y+1][world_posytion_x + 1]
			
	else:
		
		if world_posytion_x - 1 >= 0:
			tile_botton_l = map[world_posytion_y][world_posytion_x - 1]
			
			if world_posytion_y - 1 >= 0:
				tile_top_l = map[world_posytion_y-1][world_posytion_x - 1]
		
		if world_posytion_x + 1 < len(map):
			tile_botton_r = map[world_posytion_y][world_posytion_x + 1]
			
			if world_posytion_y - 1 >= 0:
				tile_top_r = map[world_posytion_y-1][world_posytion_x + 1]
	
	
func setup_odd(_is_odd):
	is_odd = _is_odd
	queue_redraw()

func _draw():
	if mouse_over:
		$Polygon2D.color = cursor_shodow
	else:
		if is_marked:
			$Polygon2D.color = mark_color
			return
			
		if is_odd:
			$Polygon2D.color = odd_normal_corsor
		else:
			$Polygon2D.color = normal_cursor
		
	
func _on_static_body_2d_mouse_entered():
	mouse_over = true
	queue_redraw()

func _on_static_body_2d_mouse_exited():
	mouse_over = false
	queue_redraw()
	
func _is_marked():
	is_marked=true
	queue_redraw()
	
func setup_system(ring_num):
	if ring_num > my_ring_num:
		my_ring_num = ring_num
		is_odd = (my_ring_num % 2 == 0)
		queue_redraw()
		
		if tile_top:
			tile_top.setup_system(my_ring_num - 1)
		
		if tile_botton:
			tile_botton.setup_system(my_ring_num - 1)
		
		if tile_top_l:
			tile_top_l.setup_system(my_ring_num - 1)
		
		if tile_top_r:
			tile_top_r.setup_system(my_ring_num - 1)
		
		if tile_botton_l:
			tile_botton_l.setup_system(my_ring_num - 1)
			
		if tile_botton_r:
			tile_botton_r.setup_system(my_ring_num - 1)
		
		

func _mark_neighborhood():
	if tile_top:
		tile_top._is_marked()
	
	if tile_botton:
		tile_botton._is_marked()
	
	if tile_top_l:
		tile_top_l._is_marked()
	
	if tile_top_r:
		tile_top_r._is_marked()
	
	if tile_botton_l:
		tile_botton_l._is_marked()
		
	if tile_botton_r:
		tile_botton_r._is_marked()

func _on_static_body_2d_input_event(viewport, event, shape_idx):
	if event is InputEventMouseButton and not event.is_echo():
		if event.button_index == MOUSE_BUTTON_LEFT and event.pressed:
			pass


func _on_visible_on_screen_enabler_2d_screen_entered():
	if is_active:
		$Polygon2D.visible = true
		$StaticBody2D.visible = true

func _on_visible_on_screen_enabler_2d_screen_exited():
	if is_active:
		$Polygon2D.visible= false
		$StaticBody2D.visible = false
"

[node name="TileNode" type="Node2D"]
script = SubResource("GDScript_ehikw")

[node name="Polygon2D" type="Polygon2D" parent="."]
polygon = PackedVector2Array(-16, -28, -32, 0, -16, 28, 16, 28, 32, 0, 16, -28)

[node name="StaticBody2D" type="StaticBody2D" parent="."]
input_pickable = true

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="StaticBody2D"]
polygon = PackedVector2Array(-16, -28, -32, 0, -16, 28, 16, 28, 32, 0, 16, -28)

[node name="VisibleOnScreenEnabler2D" type="VisibleOnScreenEnabler2D" parent="."]
position = Vector2(0.499999, 0.5)
scale = Vector2(3.55, 3.35)

[connection signal="input_event" from="StaticBody2D" to="." method="_on_static_body_2d_input_event"]
[connection signal="mouse_entered" from="StaticBody2D" to="." method="_on_static_body_2d_mouse_entered"]
[connection signal="mouse_exited" from="StaticBody2D" to="." method="_on_static_body_2d_mouse_exited"]
[connection signal="screen_entered" from="VisibleOnScreenEnabler2D" to="." method="_on_visible_on_screen_enabler_2d_screen_entered"]
[connection signal="screen_exited" from="VisibleOnScreenEnabler2D" to="." method="_on_visible_on_screen_enabler_2d_screen_exited"]
